{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport Post from '../components/post';\nimport { server } from '../config';\n\nfunction HomePage() {\n  var client = require('contentful').createClient({\n    space: process.env.contentful_space_id,\n    accessToken: process.env.contentful_content_delivery_api\n  });\n\n  function fetchEntries() {\n    return _fetchEntries.apply(this, arguments);\n  }\n\n  function _fetchEntries() {\n    _fetchEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.getEntries();\n\n            case 2:\n              entries = _context2.sent;\n\n              if (!entries.items) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchEntries.apply(this, arguments);\n  }\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    function getPosts() {\n      return _getPosts.apply(this, arguments);\n    }\n\n    function _getPosts() {\n      _getPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var allPosts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchEntries();\n\n              case 2:\n                allPosts = _context.sent;\n                setPosts(_toConsumableArray(allPosts));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getPosts.apply(this, arguments);\n    }\n\n    getPosts();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Next.js + Contentful\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://css.zeit.sh/v1.css\",\n    type: \"text/css\"\n  })), posts.length > 0 ? posts.map(function (p) {\n    return __jsx(Post, {\n      alt: p.fields.alt,\n      date: p.fields.date,\n      key: p.fields.title,\n      image: p.fields.image,\n      title: p.fields.title,\n      url: p.fields.url\n    });\n  }) : null);\n}\n\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport SiteHeader from '../../components/SiteHeader';\nimport { Container, Image } from 'semantic-ui-react';\nimport { getPostAndMorePosts, getAllPostsWithSlug } from '../../lib/api';\nexport default function Post({\n  post,\n  morePosts,\n  preview\n}) {\n  const router = useRouter();\n\n  if (!router.isFallback && !post) {\n    return __jsx(ErrorPage, {\n      statusCode: 404\n    });\n  }\n\n  return __jsx(React.Fragment, null, router.isFallback ? __jsx(Head, null, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, post.title)), __jsx(SiteHeader, null), __jsx(Container, {\n    text: true\n  }, __jsx(\"h1\", null, post.title), __jsx(Image, {\n    src: post.image.file.url,\n    alt: post.image.file.description\n  }), __jsx(Link, {\n    href: \"/\"\n  }, \"Back to home\"))));\n}\n;\nexport async function getStaticProps({\n  params,\n  preview = false\n}) {\n  var _data$post, _data$morePosts;\n\n  const data = await getPostAndMorePosts(params.slug, preview);\n  return {\n    props: {\n      preview,\n      post: (_data$post = data === null || data === void 0 ? void 0 : data.post) !== null && _data$post !== void 0 ? _data$post : null,\n      morePosts: (_data$morePosts = data === null || data === void 0 ? void 0 : data.morePosts) !== null && _data$morePosts !== void 0 ? _data$morePosts : null\n    }\n  };\n}\nexport async function getStaticPaths() {\n  var _allPosts$map;\n\n  const allPosts = await getAllPostsWithSlug();\n  return {\n    paths: (_allPosts$map = allPosts === null || allPosts === void 0 ? void 0 : allPosts.map(({\n      slug\n    }) => `/posts/${slug}`)) !== null && _allPosts$map !== void 0 ? _allPosts$map : [],\n    fallback: true\n  };\n}","map":null,"metadata":{},"sourceType":"module"}